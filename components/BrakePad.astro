---
export interface Props {
	duration?: number;
}
const TAG = 'vtbot-brake-pad'; // see also start of script
const { duration = 2000 } = Astro.props;
if (!import.meta.env.DEV) {
	console.error(
		`${Astro.url.pathname}: Active brake pad in production? Don't forget to remove it!`
	);
}
---

<meta name={TAG} content={'' + duration} />

<script>
	const TAG = 'vtbot-brake-pad';

	import {
		TRANSITION_BEFORE_PREPARATION,
		isTransitionBeforePreparationEvent,
	} from 'astro:transitions/client';

	const duration = () =>
		(document.querySelector(`meta[name="${TAG}"]`) as HTMLMetaElement)?.content;

	const beforePreparation = (event: Event) => {
		const waitTime = duration();

		if (waitTime && isTransitionBeforePreparationEvent(event)) {
			const originalLoader = event.loader;
			event.loader = async () => {
				await originalLoader();
				await new Promise((resolve) => setTimeout(resolve, parseInt(waitTime, 10)));
			};
		}
	};
	document.addEventListener(TRANSITION_BEFORE_PREPARATION, beforePreparation);
</script>
