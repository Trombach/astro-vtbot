---
export interface Props {
	name?: string;
	title: string;
	body?: string;
	href: string;
	icon: string;
	iconStyle?: string;
	what: string;
	reload?: boolean;
}

const {
	name = Math.random().toString(36).substring(2, 8),
	href,
	title,
	body,
	icon,
	iconStyle = '',
	what,
	reload,
} = Astro.props;
---

<li class="link-card">
	<a href={href}>
		<tt>{what}</tt>
		<h2>
			<span transition:name={name + '-1'} style="display:inline-block">{title}</span>
			<span>&nbsp;&rarr;</span>
		</h2>
		<p>
			<span
				transition:name={name + '-2'}
				style={'display: inline-block; font-size:3.5rem; float:right; padding:0.2em; ' + iconStyle}
				>{icon}</span
			>
			{body}<div transition:name={name + '-3'}><slot /></div>
		</p>
	</a>
</li>
<style>
	.link-card {
		list-style: none;
		display: flex;
		padding: 0.25rem;
		background-color: white;
		background-image: none;
		background-size: 400%;
		border-radius: 0.6rem;
		background-position: 100%;
		transition: background-position 0.6s cubic-bezier(0.22, 1, 0.36, 1);
		box-shadow:
			0 4px 6px -1px rgba(0, 0, 0, 0.1),
			0 2px 4px -2px rgba(0, 0, 0, 0.1);
	}

	.link-card > a {
		width: 100%;
		text-decoration: none;
		line-height: 1.4;
		padding: 1rem 1.3rem;
		border-radius: 0.35rem;
		background-color: #222;
		opacity: 0.8;
		color: antiquewhite;
	}
	h2 {
		margin: 0;
		font-size: 1.25rem;
		transition: color 0.6s cubic-bezier(0.22, 1, 0.36, 1);
	}
	tt {
		font-size: 0.66rem;
	}
	p {
		hyphens: auto;
		margin-top: 0.5rem;
		margin-bottom: 0;
		color: antiquewhite;
		hyphens: auto;
	}
	.link-card:is(:hover, :focus-within) {
		background-position: 0;
		background-image: var(--accent-gradient);
	}
	.link-card:is(:hover, :focus-within) h2 {
		color: rgb(var(--accent));
	}
</style>
