---
import { getImage } from 'astro:assets';
import { ViewTransitions } from 'astro:transitions';
import outback from 'src/assets/outback.png';

const optimizedBackground = await getImage({ src: outback });
const vtbotBackgroundImage = `url(${optimizedBackground.src})`;
---

<html lang="en">
	<head>
		<meta charset="utf-8" />
		<meta name="viewport" content="width=device-width" />
		<meta name="vtbot-ken" content="guru" />
		<ViewTransitions intraPageTransitions />
	</head>
	<body>
		<a href="" transition:name="Ken Guru">ðŸ¦˜</a>
		<div>
			<p>The interesting points in this demo are:</p>
			<ul>
				<li>The demo runs on a single page with <code>href=""</code> as the taget for the link. View transitions are explicitly enabledfor same page navigation using <code>&lt;ViewTransitions intraPageTransitions /></code>.</li>
				<li>The loader function in the <code>astro:before-preparation</code> event</li>
				is overwritten with an empty function. Thus we do not load any HTML but just keep what we have.
				<li>
					The <code>swap</code> property of the <code>astro:before-swap</code> event is also overridden. In the new function, we just look for the kangaroo and nudge it a bit around.
				</li>
			</ul>
		</div>
		<style is:global define:vars={{ 'vtbot-background-image': vtbotBackgroundImage }}>
			:root {
				background-image: var(--vtbot-background-image);
				background-size: 100vw 100vh;
				background-position: 0vw 0vh;
				font-family: sans-serif;
				font-size: 1.5rem;
				overflow: clip;
			}
			a {
				font-size: 6rem;
				position: absolute;
				transform: translate(50vw, 75vh);
			}
			div {
			background-color: #fff8;
			max-width: 67vw;
			padding: 1rem;
			}
		
		</style>
		<script>
			import {
				TRANSITION_BEFORE_PREPARATION,
				TRANSITION_BEFORE_SWAP,
				isTransitionBeforeSwapEvent,
			} from 'astro:transitions/client';
			import { isTransitionBeforePreparationEvent } from '../../../../../../astro/astro/packages/astro/dist/transitions/events';

			const enabled = () => document.querySelector('meta[name="vtbot-ken"]');

			// We don't have to swap in a new document. We just nudge Kenny a bit around.
			document.addEventListener(TRANSITION_BEFORE_SWAP, (event: Event) => {
				if (enabled() && isTransitionBeforeSwapEvent(event)) {
					event.swap = () => {
						const kenGuru = document.querySelector('a')!;
						const x = 5 + Math.random() * 90;
						const y = 60 + Math.random() * 20;
						const s = 0.5 + Math.random() * 1.5;
						kenGuru.style.transform = `translate(${x}vw,${y}vh) scale(${s})`;
					};
				}
			});
			// we can remove the default loader from processing as we manipulate the current document
			document.addEventListener(TRANSITION_BEFORE_PREPARATION, (event: Event) => {
				if (enabled() && isTransitionBeforePreparationEvent(event)) {
					event.loader = () => Promise.resolve();
				}
			});
		</script>
	</body>
</html>
